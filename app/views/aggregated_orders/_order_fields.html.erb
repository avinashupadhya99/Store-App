<article class="card my-1">

	<div class="row mt-2"> <!--Error messages-->
		<div class="col-md-10 offset-md-1 col-sm-10 offset-sm-1 col-10 offset-10">
				<div class='alert alert-danger prod-error-alert'>
					No product with that ID
				</div>
				<div class='alert alert-danger quant-error-alert'>
					Quantity exceeds inventory
				</div>
		</div>
	</div>
	<div class="row mx-2 my-1">
		<div class="col-sm-12 col-md-12 col-lg-12 col-xl-2">
			<div class="form-group">
				<h5 class="font-weight-normal">
					<%= f.label :product_id %>
				</h5>
					<%= f.number_field :product_id, class: "form-control", id: "product_id", placeholder: "Product ID" %>
			</div>
		</div>
		<div class="col-sm-12 col-md-12 col-lg-12 col-xl-5">
			<div class="form-group">
				<h5 class="font-weight-normal">
					<%= f.label :quantity %>
				</h5>
					<%= f.number_field :quantity, class: "form-control", id: "quantity", :readonly => true, placeholder: "Enter quantity" %>
			</div>
		</div>
		<div class="col-sm-12 col-md-12 col-lg-12 col-xl-5">
			<div class="form-group">
				<h5 class="font-weight-normal">
					<%= f.label :amount %>
				</h5>
					<%= f.number_field :amount, class: "form-control", id: "amount", :readonly => true, placeholder: "Amount" %>
			</div>
		</div>
		<div class="col-md-8 offset-md-2">
			<span class="float-right">
				<%= f.hidden_field :_destroy %>
    			<%= link_to 'Delete', '#', class: 'remove_record btn btn-danger btn-sm' %>
			</span>
		</div>
	</div>
</article>
<script>
    $('.prod-error-alert').hide(); //Initially hide the product id error alert
    $('.quant-error-alert').hide(); //Initially hide the quantity error alert
	<% products = Product.all %> //Fetch all products from db
	var prods = '<%= products.to_json %>'; //Convert to json with ruby
	var jsprods = prods.replace(/&quot;/g, "\""); //Replace all &quot; with "
	var jsonprods = JSON.parse(jsprods); //Parse the converted string into JSON format
	$('article #product_id').on('keydown blur', function(event) {
		if(event.keyCode == 13 || event.keyCode == 9 || event.type=='blur'){ //Check if enter or tab is pressed
			var p = $(this).val(); //Product id entered 
			var $q =$(this).closest('article').find("#quantity"); //Quantity input field of the current form
			//Add validation here
			var found = false; //Flag to check if product exists
			$.each( jsonprods, function( key, value ) { //Loop through the JSON
				if(value.id == p){ //Check if product id exists
					$q.attr("readonly", false); //set quantity field as editable
					found = true;
				}
			});
			if(found==false) {
				$(this).closest('article').find('.prod-error-alert').show();
				$q.val('');
				$q.attr("readonly", true);
			} else {
				$(this).closest('article').find('.prod-error-alert').hide();

			}
			if(event.keyCode == 13) {
				event.preventDefault();
			}
		}
	});
	$('article #quantity').on('keydown blur', function(event) {
		var total_amount = $('.total-amount').text();
		if(event.keyCode == 13 || event.keyCode == 9 || event.type=='blur'){ //Check if enter or tab is pressed
			var q = $(this).val(); //Quantity entered 
			var p = $(this).closest('article').find("#product_id").val(); //Product id of the current form
			var $a = $(this).closest('article').find("#amount"); //Amount input field
			var $qea = $(this).closest('article').find('.quant-error-alert'); //Alert box of quantity errors
			$.each( jsonprods, function( key, value ) { //Loop through the JSON
				if(value.id == p) { //Find the product from the JSON
					if(q<=value.quantity) { //Check if qunatity entered is within the inventory range
						$a.val(q*value.price); //Set the amount field with the computed amount
						$qea.hide();
					} else {
						$qea.show();
						$a.val('');
					}
					
				}
			});
			if(event.keyCode == 13) {
				event.preventDefault();
			}
		}

	});
</script>